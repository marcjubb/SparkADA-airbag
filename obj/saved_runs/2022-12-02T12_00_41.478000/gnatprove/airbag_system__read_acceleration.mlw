module Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type integer = <range -2147483648 2147483647>
  
  val function first : int
    ensures { result = ((- 2147483648) : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = integer,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type integer__ref = { mutable integer__content : integer }
  
  function integer__ref_integer__content__projection (a: integer__ref) : integer =
    a.integer__content
  
  meta "model_projection" function integer__ref_integer__content__projection
  
  meta "inline:no" function integer__ref_integer__content__projection
  
  val integer__havoc (x: integer__ref) : unit
    writes { x }
end

module Standard__integer___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  
  predicate dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) =
    if ((temp___is_init_14 = True) \/
          (Standard__integer.first <= Standard__integer.last)) then
      (((Standard__integer.dynamic_property Standard__integer.first)
          Standard__integer.last)
         temp___expr_18)
    else true
  
  val dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_18 : int))
                      (temp___is_init_14 : bool))
                     (temp___skip_constant_15 : bool))
                    (temp___do_toplevel_16 : bool))
                   (temp___do_typ_inv_17 : bool)) }
  
  predicate default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) =
    true
  
  val default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_19 : int))
                   (temp___skip_top_level_20 : bool)) }
end

module Standard__positive
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type positive = <range 1 2147483647>
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = positive,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type positive__ref = { mutable positive__content : positive }
  
  function positive__ref_positive__content__projection (a: positive__ref) : positive =
    a.positive__content
  
  meta "model_projection" function positive__ref_positive__content__projection
  
  meta "inline:no" function positive__ref_positive__content__projection
  
  val positive__havoc (x: positive__ref) : unit
    writes { x }
end

module Standard__character
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type character
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (255 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = character,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type character__ref = { mutable character__content : character }
  
  function character__ref_character__content__projection (a: character__ref) : character =
    a.character__content
  
  meta "model_projection" function character__ref_character__content__projection
  
  meta "inline:no" function character__ref_character__content__projection
  
  val character__havoc (x: character__ref) : unit
    writes { x }
end

module Standard__character__rep
  use Standard__character as Standard__character
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__character.character,
    predicate in_range = Standard__character.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Array__Int__Standard__character
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  
  function index_I1_one : int = 1 : int
  
  type component_type = Standard__character.character
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_98 : int.
          if ((a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last)) then
            ((Standard__character__rep.to_rep ((get a) temp___idx_98))
               = (Standard__character__rep.to_rep
                    ((get b) ((b__first - a__first) + temp___idx_98))))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_98 : int.
                 if ((a__first <= temp___idx_98) /\
                       (temp___idx_98 <= a__last)) then
                   ((Standard__character__rep.to_rep ((get a) temp___idx_98))
                      = (Standard__character__rep.to_rep
                           ((get b) ((b__first - a__first) + temp___idx_98))))
                 else true)))
end

module Standard__integer__rep
  use Standard__integer as Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Standard__integer.integer) : int =
    Standard__integer.integer'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Standard__string
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__positive as Standard__positive
  use Standard__character as Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Standard__integer__rep as Standard__integer__rep
  
  type component_type = Standard__character.character
  
  function index_1_id (x: int) : int = x
  
  clone export ada__model.Unconstr_Array with
    axiom .,
    type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = Int.( <= )
  
  type string__ = __t
  
  meta "model_projection" function to_array
  
  meta "inline:no" function to_array
  
  meta "model_projection" function first
  
  meta "inline:no" function first
  
  meta "model_projection" function last
  
  meta "inline:no" function last
  
  type string____ref = { mutable string____content : string__ }
  
  function string____ref_string____content__projection (a: string____ref) : string__ =
    a.string____content
  
  meta "model_projection" function string____ref_string____content__projection
  
  meta "inline:no" function string____ref_string____content__projection
  
  val string____havoc (x: string____ref) : unit
    writes { x }
end

module Airbag_system__acceleration_range
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type acceleration_range = <range -300000 100000>
  
  val function first : int
    ensures { result = ((- 300000) : int) }
  
  val function last : int
    ensures { result = (100000 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = acceleration_range,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type acceleration_range__ref = {
                                mutable acceleration_range__content :
                                  acceleration_range
                                }
  
  function acceleration_range__ref_acceleration_range__content__projection (a: acceleration_range__ref) : acceleration_range =
    a.acceleration_range__content
  
  meta "model_projection" function acceleration_range__ref_acceleration_range__content__projection
  
  meta "inline:no" function acceleration_range__ref_acceleration_range__content__projection
  
  val acceleration_range__havoc (x: acceleration_range__ref) : unit
    writes { x }
end

module Airbag_system__acceleration_range__rep
  use Airbag_system__acceleration_range as Airbag_system__acceleration_range
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Airbag_system__acceleration_range.acceleration_range) : int =
    Airbag_system__acceleration_range.acceleration_range'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Airbag_system__acceleration_range.acceleration_range,
    predicate in_range = Airbag_system__acceleration_range.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Airbag_system__velocity_range
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type velocity_range = <range -300000 300000>
  
  val function first : int
    ensures { result = ((- 300000) : int) }
  
  val function last : int
    ensures { result = (300000 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = velocity_range,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type velocity_range__ref = {
                            mutable velocity_range__content : velocity_range
                            }
  
  function velocity_range__ref_velocity_range__content__projection (a: velocity_range__ref) : velocity_range =
    a.velocity_range__content
  
  meta "model_projection" function velocity_range__ref_velocity_range__content__projection
  
  meta "inline:no" function velocity_range__ref_velocity_range__content__projection
  
  val velocity_range__havoc (x: velocity_range__ref) : unit
    writes { x }
end

module Airbag_system__velocity_range__rep
  use Airbag_system__velocity_range as Airbag_system__velocity_range
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Airbag_system__velocity_range.velocity_range) : int =
    Airbag_system__velocity_range.velocity_range'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Airbag_system__velocity_range.velocity_range,
    predicate in_range = Airbag_system__velocity_range.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Airbag_system__time_range
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type time_range = <range 0 1000>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (1000 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = time_range,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type time_range__ref = { mutable time_range__content : time_range }
  
  function time_range__ref_time_range__content__projection (a: time_range__ref) : time_range =
    a.time_range__content
  
  meta "model_projection" function time_range__ref_time_range__content__projection
  
  meta "inline:no" function time_range__ref_time_range__content__projection
  
  val time_range__havoc (x: time_range__ref) : unit
    writes { x }
end

module Airbag_system__time_range__rep
  use Airbag_system__time_range as Airbag_system__time_range
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Airbag_system__time_range.time_range) : int =
    Airbag_system__time_range.time_range'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Airbag_system__time_range.time_range,
    predicate in_range = Airbag_system__time_range.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Airbag_system__status_airbag_system_type
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type status_airbag_system_type
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (1 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = status_airbag_system_type,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type status_airbag_system_type__ref = {
                                       mutable status_airbag_system_type__content :
                                         status_airbag_system_type
                                       }
  
  function status_airbag_system_type__ref_status_airbag_system_type__content__projection (a: status_airbag_system_type__ref) : status_airbag_system_type =
    a.status_airbag_system_type__content
  
  meta "model_projection" function status_airbag_system_type__ref_status_airbag_system_type__content__projection
  
  meta "inline:no" function status_airbag_system_type__ref_status_airbag_system_type__content__projection
  
  val status_airbag_system_type__havoc (x: status_airbag_system_type__ref) : 
    unit
    writes { x }
end

module Airbag_system__status_airbag_system_type__rep
  use Airbag_system__status_airbag_system_type as Airbag_system__status_airbag_system_type
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Airbag_system__status_airbag_system_type.status_airbag_system_type,
    predicate in_range = Airbag_system__status_airbag_system_type.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Airbag_system__status_system_type__rep
  use _gnatprove_standard.Main
  use int.Int
  use Airbag_system__acceleration_range as Airbag_system__acceleration_range
  use Airbag_system__acceleration_range__rep as Airbag_system__acceleration_range__rep
  use Airbag_system__velocity_range as Airbag_system__velocity_range
  use Airbag_system__velocity_range__rep as Airbag_system__velocity_range__rep
  use Airbag_system__time_range as Airbag_system__time_range
  use Airbag_system__time_range__rep as Airbag_system__time_range__rep
  use Airbag_system__status_airbag_system_type as Airbag_system__status_airbag_system_type
  use Airbag_system__status_airbag_system_type__rep as Airbag_system__status_airbag_system_type__rep
  
  type __split_fields = {
                       rec__airbag_system__status_system_type__initial_velocity_measured :
                         Airbag_system__velocity_range.velocity_range;
                       rec__airbag_system__status_system_type__final_velocity_measured :
                         Airbag_system__velocity_range.velocity_range;
                       rec__airbag_system__status_system_type__time_difference_measured :
                         Airbag_system__time_range.time_range;
                       rec__airbag_system__status_system_type__acceleration_measured :
                         Airbag_system__acceleration_range.acceleration_range;
                       rec__airbag_system__status_system_type__status_airbag_system :
                         Airbag_system__status_airbag_system_type.status_airbag_system_type
                       }
  
  function __split_fields_rec__airbag_system__status_system_type__initial_velocity_measured__projection (a: __split_fields) : 
    Airbag_system__velocity_range.velocity_range =
    a.rec__airbag_system__status_system_type__initial_velocity_measured
  
  meta "model_projection" function __split_fields_rec__airbag_system__status_system_type__initial_velocity_measured__projection
  
  meta "inline:no" function __split_fields_rec__airbag_system__status_system_type__initial_velocity_measured__projection
  
  function __split_fields_rec__airbag_system__status_system_type__final_velocity_measured__projection (a: __split_fields) : 
    Airbag_system__velocity_range.velocity_range =
    a.rec__airbag_system__status_system_type__final_velocity_measured
  
  meta "model_projection" function __split_fields_rec__airbag_system__status_system_type__final_velocity_measured__projection
  
  meta "inline:no" function __split_fields_rec__airbag_system__status_system_type__final_velocity_measured__projection
  
  function __split_fields_rec__airbag_system__status_system_type__time_difference_measured__projection (a: __split_fields) : 
    Airbag_system__time_range.time_range =
    a.rec__airbag_system__status_system_type__time_difference_measured
  
  meta "model_projection" function __split_fields_rec__airbag_system__status_system_type__time_difference_measured__projection
  
  meta "inline:no" function __split_fields_rec__airbag_system__status_system_type__time_difference_measured__projection
  
  function __split_fields_rec__airbag_system__status_system_type__acceleration_measured__projection (a: __split_fields) : 
    Airbag_system__acceleration_range.acceleration_range =
    a.rec__airbag_system__status_system_type__acceleration_measured
  
  meta "model_projection" function __split_fields_rec__airbag_system__status_system_type__acceleration_measured__projection
  
  meta "inline:no" function __split_fields_rec__airbag_system__status_system_type__acceleration_measured__projection
  
  function __split_fields_rec__airbag_system__status_system_type__status_airbag_system__projection (a: __split_fields) : 
    Airbag_system__status_airbag_system_type.status_airbag_system_type =
    a.rec__airbag_system__status_system_type__status_airbag_system
  
  meta "model_projection" function __split_fields_rec__airbag_system__status_system_type__status_airbag_system__projection
  
  meta "inline:no" function __split_fields_rec__airbag_system__status_system_type__status_airbag_system__projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields }
  
  function __rep___split_fields__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__projection
  
  meta "inline:no" function __rep___split_fields__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate airbag_system__status_system_type__initial_velocity_measured__pred (a: __rep) =
    true
  
  val airbag_system__status_system_type__initial_velocity_measured__pred (a: __rep) : 
    bool
    ensures { result
                <->
                (airbag_system__status_system_type__initial_velocity_measured__pred
                   (a : __rep)) }
  
  val rec__airbag_system__status_system_type__initial_velocity_measured_ (a: __rep) : 
    Airbag_system__velocity_range.velocity_range
    requires { airbag_system__status_system_type__initial_velocity_measured__pred
                 a
    }
    ensures { (result
                 = ((__split_fields a).rec__airbag_system__status_system_type__initial_velocity_measured)) }
  
  predicate airbag_system__status_system_type__final_velocity_measured__pred (a: __rep) =
    true
  
  val airbag_system__status_system_type__final_velocity_measured__pred (a: __rep) : 
    bool
    ensures { result
                <->
                (airbag_system__status_system_type__final_velocity_measured__pred
                   (a : __rep)) }
  
  val rec__airbag_system__status_system_type__final_velocity_measured_ (a: __rep) : 
    Airbag_system__velocity_range.velocity_range
    requires { airbag_system__status_system_type__final_velocity_measured__pred
                 a
    }
    ensures { (result
                 = ((__split_fields a).rec__airbag_system__status_system_type__final_velocity_measured)) }
  
  predicate airbag_system__status_system_type__time_difference_measured__pred (a: __rep) =
    true
  
  val airbag_system__status_system_type__time_difference_measured__pred (a: __rep) : 
    bool
    ensures { result
                <->
                (airbag_system__status_system_type__time_difference_measured__pred
                   (a : __rep)) }
  
  val rec__airbag_system__status_system_type__time_difference_measured_ (a: __rep) : 
    Airbag_system__time_range.time_range
    requires { airbag_system__status_system_type__time_difference_measured__pred
                 a
    }
    ensures { (result
                 = ((__split_fields a).rec__airbag_system__status_system_type__time_difference_measured)) }
  
  predicate airbag_system__status_system_type__acceleration_measured__pred (a: __rep) =
    true
  
  val airbag_system__status_system_type__acceleration_measured__pred (a: __rep) : 
    bool
    ensures { result
                <->
                (airbag_system__status_system_type__acceleration_measured__pred
                   (a : __rep)) }
  
  val rec__airbag_system__status_system_type__acceleration_measured_ (a: __rep) : 
    Airbag_system__acceleration_range.acceleration_range
    requires { airbag_system__status_system_type__acceleration_measured__pred
                 a
    }
    ensures { (result
                 = ((__split_fields a).rec__airbag_system__status_system_type__acceleration_measured)) }
  
  predicate airbag_system__status_system_type__status_airbag_system__pred (a: __rep) =
    true
  
  val airbag_system__status_system_type__status_airbag_system__pred (a: __rep) : 
    bool
    ensures { result
                <->
                (airbag_system__status_system_type__status_airbag_system__pred
                   (a : __rep)) }
  
  val rec__airbag_system__status_system_type__status_airbag_system_ (a: __rep) : 
    Airbag_system__status_airbag_system_type.status_airbag_system_type
    requires { airbag_system__status_system_type__status_airbag_system__pred
                 a
    }
    ensures { (result
                 = ((__split_fields a).rec__airbag_system__status_system_type__status_airbag_system)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if ((((Airbag_system__velocity_range__rep.to_rep
             ((__split_fields a).rec__airbag_system__status_system_type__initial_velocity_measured))
            = (Airbag_system__velocity_range__rep.to_rep
                 ((__split_fields b).rec__airbag_system__status_system_type__initial_velocity_measured))) /\
           ((Airbag_system__velocity_range__rep.to_rep
               ((__split_fields a).rec__airbag_system__status_system_type__final_velocity_measured))
              = (Airbag_system__velocity_range__rep.to_rep
                   ((__split_fields b).rec__airbag_system__status_system_type__final_velocity_measured)))) /\
          ((((Airbag_system__time_range__rep.to_rep
                ((__split_fields a).rec__airbag_system__status_system_type__time_difference_measured))
               = (Airbag_system__time_range__rep.to_rep
                    ((__split_fields b).rec__airbag_system__status_system_type__time_difference_measured))) /\
              ((Airbag_system__acceleration_range__rep.to_rep
                  ((__split_fields a).rec__airbag_system__status_system_type__acceleration_measured))
                 = (Airbag_system__acceleration_range__rep.to_rep
                      ((__split_fields b).rec__airbag_system__status_system_type__acceleration_measured)))) /\
             ((Airbag_system__status_airbag_system_type__rep.to_rep
                 ((__split_fields a).rec__airbag_system__status_system_type__status_airbag_system))
                = (Airbag_system__status_airbag_system_type__rep.to_rep
                     ((__split_fields b).rec__airbag_system__status_system_type__status_airbag_system))))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
end

module Airbag_system__status_system_type
  use export Airbag_system__status_system_type__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type status_system_type = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function airbag_system__status_system_type__initial_velocity_measured__first__bit : 
    int
  
  val function airbag_system__status_system_type__initial_velocity_measured__last__bit : 
    int
  
  val function airbag_system__status_system_type__initial_velocity_measured__position : 
    int
  
  axiom airbag_system__status_system_type__initial_velocity_measured__first__bit_axiom:
    (airbag_system__status_system_type__initial_velocity_measured__first__bit
       >= (0 : int))
  
  axiom airbag_system__status_system_type__initial_velocity_measured__last__bit_axiom:
    (airbag_system__status_system_type__initial_velocity_measured__last__bit
       > airbag_system__status_system_type__initial_velocity_measured__first__bit)
  
  axiom airbag_system__status_system_type__initial_velocity_measured__position_axiom:
    (airbag_system__status_system_type__initial_velocity_measured__position
       >= (0 : int))
  
  val function airbag_system__status_system_type__final_velocity_measured__first__bit : 
    int
  
  val function airbag_system__status_system_type__final_velocity_measured__last__bit : 
    int
  
  val function airbag_system__status_system_type__final_velocity_measured__position : 
    int
  
  axiom airbag_system__status_system_type__final_velocity_measured__first__bit_axiom:
    (airbag_system__status_system_type__final_velocity_measured__first__bit
       >= (0 : int))
  
  axiom airbag_system__status_system_type__final_velocity_measured__last__bit_axiom:
    (airbag_system__status_system_type__final_velocity_measured__last__bit
       > airbag_system__status_system_type__final_velocity_measured__first__bit)
  
  axiom airbag_system__status_system_type__final_velocity_measured__position_axiom:
    (airbag_system__status_system_type__final_velocity_measured__position
       >= (0 : int))
  
  val function airbag_system__status_system_type__time_difference_measured__first__bit : 
    int
  
  val function airbag_system__status_system_type__time_difference_measured__last__bit : 
    int
  
  val function airbag_system__status_system_type__time_difference_measured__position : 
    int
  
  axiom airbag_system__status_system_type__time_difference_measured__first__bit_axiom:
    (airbag_system__status_system_type__time_difference_measured__first__bit
       >= (0 : int))
  
  axiom airbag_system__status_system_type__time_difference_measured__last__bit_axiom:
    (airbag_system__status_system_type__time_difference_measured__last__bit
       > airbag_system__status_system_type__time_difference_measured__first__bit)
  
  axiom airbag_system__status_system_type__time_difference_measured__position_axiom:
    (airbag_system__status_system_type__time_difference_measured__position
       >= (0 : int))
  
  val function airbag_system__status_system_type__acceleration_measured__first__bit : 
    int
  
  val function airbag_system__status_system_type__acceleration_measured__last__bit : 
    int
  
  val function airbag_system__status_system_type__acceleration_measured__position : 
    int
  
  axiom airbag_system__status_system_type__acceleration_measured__first__bit_axiom:
    (airbag_system__status_system_type__acceleration_measured__first__bit
       >= (0 : int))
  
  axiom airbag_system__status_system_type__acceleration_measured__last__bit_axiom:
    (airbag_system__status_system_type__acceleration_measured__last__bit
       > airbag_system__status_system_type__acceleration_measured__first__bit)
  
  axiom airbag_system__status_system_type__acceleration_measured__position_axiom:
    (airbag_system__status_system_type__acceleration_measured__position
       >= (0 : int))
  
  val function airbag_system__status_system_type__status_airbag_system__first__bit : 
    int
  
  val function airbag_system__status_system_type__status_airbag_system__last__bit : 
    int
  
  val function airbag_system__status_system_type__status_airbag_system__position : 
    int
  
  axiom airbag_system__status_system_type__status_airbag_system__first__bit_axiom:
    (airbag_system__status_system_type__status_airbag_system__first__bit
       >= (0 : int))
  
  axiom airbag_system__status_system_type__status_airbag_system__last__bit_axiom:
    (airbag_system__status_system_type__status_airbag_system__last__bit
       > airbag_system__status_system_type__status_airbag_system__first__bit)
  
  axiom airbag_system__status_system_type__status_airbag_system__position_axiom:
    (airbag_system__status_system_type__status_airbag_system__position
       >= (0 : int))
  
  val function user_eq (a: status_system_type) (b: status_system_type) : 
    bool
  
  val function dummy : status_system_type
  
  type status_system_type__ref = {
                                mutable status_system_type__content :
                                  status_system_type
                                }
  
  function status_system_type__ref_status_system_type__content__projection (a: status_system_type__ref) : status_system_type =
    a.status_system_type__content
  
  meta "model_projection" function status_system_type__ref_status_system_type__content__projection
  
  meta "inline:no" function status_system_type__ref_status_system_type__content__projection
  
  val status_system_type__havoc (x: status_system_type__ref) : unit
    writes { x }
end

module Airbag_system__status_system
  use _gnatprove_standard.Main
  use int.Int
  use Airbag_system__status_system_type as Airbag_system__status_system_type
  
  val status_system__split_fields : Airbag_system__status_system_type.__split_fields__ref
end

module Airbag_system__status_system_type___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Airbag_system__status_system_type as Airbag_system__status_system_type
  
  predicate dynamic_invariant (temp___expr_196: Airbag_system__status_system_type.status_system_type) (temp___is_init_192: bool) (temp___skip_constant_193: bool) (temp___do_toplevel_194: bool) (temp___do_typ_inv_195: bool) =
    true
  
  val dynamic_invariant (temp___expr_196: Airbag_system__status_system_type.status_system_type) (temp___is_init_192: bool) (temp___skip_constant_193: bool) (temp___do_toplevel_194: bool) (temp___do_typ_inv_195: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_196 :
                          Airbag_system__status_system_type.status_system_type))
                      (temp___is_init_192 : bool))
                     (temp___skip_constant_193 : bool))
                    (temp___do_toplevel_194 : bool))
                   (temp___do_typ_inv_195 : bool)) }
  
  predicate default_initial_assumption (temp___expr_197: Airbag_system__status_system_type.status_system_type) (temp___skip_top_level_198: bool) =
    true
  
  val default_initial_assumption (temp___expr_197: Airbag_system__status_system_type.status_system_type) (temp___skip_top_level_198: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_197 :
                       Airbag_system__status_system_type.status_system_type))
                   (temp___skip_top_level_198 : bool)) }
end

module Airbag_system__getgforce
  use _gnatprove_standard.Main
  use int.Int
  
  val function getgforce (v0: int) (v1: int) (t: int) : int
  
  val predicate getgforce__function_guard (temp___result_163: int) (v0: int) (v1: int) (t: int)
end

module Airbag_system__getgforce___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Int_Division as Int_Division
  use Standard__integer___axiom as Standard__integer___axiom
  use Airbag_system__getgforce as Airbag_system__getgforce
  
  val getgforce (v0: int) (v1: int) (t: int) : int
    requires { true }
    ensures { (((result = (((Airbag_system__getgforce.getgforce v0) v1) t)) /\
                  ((((Airbag_system__getgforce.getgforce__function_guard
                        result)
                       v0)
                      v1)
                     t)) /\
                 ((((((Standard__integer___axiom.dynamic_invariant result)
                        True)
                       False)
                      True)
                     True) /\
                    (result = ((Int_Division.div (v1 - v0)) t)))) }
  
  axiom getgforce__post_axiom:
    forall v0 : int, v1 : int, t : int
          [((Airbag_system__getgforce.getgforce v0) v1) t].
      ((((((((Standard__integer___axiom.dynamic_invariant v0) True) True)
             True)
            True) /\
           (((((Standard__integer___axiom.dynamic_invariant v1) True) True)
               True)
              True)) /\
          (((((Standard__integer___axiom.dynamic_invariant t) True) True)
              True)
             True)) ->
         (let result = ((Airbag_system__getgforce.getgforce v0) v1) t in
          if ((((Airbag_system__getgforce.getgforce__function_guard result)
                  v0)
                 v1)
                t) then
            ((true /\
                (((((Standard__integer___axiom.dynamic_invariant result) True)
                     False)
                    True)
                   True)) /\
               true)
          else true))
  
  axiom getgforce__def_axiom:
    forall v0 : int, v1 : int, t : int
          [((Airbag_system__getgforce.getgforce v0) v1) t].
      ((((((((Standard__integer___axiom.dynamic_invariant v0) True) True)
             True)
            True) /\
           (((((Standard__integer___axiom.dynamic_invariant v1) True) True)
               True)
              True)) /\
          (((((Standard__integer___axiom.dynamic_invariant t) True) True)
              True)
             True)) ->
         ((((Airbag_system__getgforce.getgforce v0) v1) t)
            = ((Int_Division.div (v1 - v0)) t)))
end

module Airbag_system__read_acceleration__v0
  use _gnatprove_standard.Main
  use int.Int
  
  val v0 : int__ref
end

module Airbag_system__read_acceleration__v1
  use _gnatprove_standard.Main
  use int.Int
  
  val v1 : int__ref
end

module Airbag_system__read_acceleration__t
  use _gnatprove_standard.Main
  use int.Int
  
  val t : int__ref
end

module Ada___spark__text_io__standard_output
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_output : Main.__private__ref
end

module As_io_wrapper__as_put_line___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__string as Standard__string
  use Ada___spark__text_io__standard_output as Ada___spark__text_io__standard_output
  use Ada___spark__text_io__standard_output as Ada___spark__text_io__standard_output
  
  val as_put_line (item: Standard__string.string__) : unit
    reads { Ada___spark__text_io__standard_output.standard_output }
    requires { true }
    writes { Ada___spark__text_io__standard_output.standard_output }
    ensures { true }
end

module Ada___spark__text_io__standard_input
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_input : Main.__private__ref
end

module As_io_wrapper__as_get__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__string as Standard__string
  use Ada___spark__text_io__standard_output as Ada___spark__text_io__standard_output
  use Ada___spark__text_io__standard_input as Ada___spark__text_io__standard_input
  use Ada___spark__text_io__standard_output as Ada___spark__text_io__standard_output
  use Ada___spark__text_io__standard_input as Ada___spark__text_io__standard_input
  
  val as_get (item: int__ref) (prompt_try_again_when_not_integer: Standard__string.string__) : 
    unit
    reads { Ada___spark__text_io__standard_output.standard_output,
      Ada___spark__text_io__standard_input.standard_input }
    requires { true }
    writes { Ada___spark__text_io__standard_output.standard_output, Ada___spark__text_io__standard_input.standard_input, item }
    ensures { ((((Standard__integer___axiom.dynamic_invariant
                    (item.int__content))
                   True)
                  True)
                 True)
                True }
end

module As_io_wrapper__as_put__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__string as Standard__string
  use Ada___spark__text_io__standard_output as Ada___spark__text_io__standard_output
  use Ada___spark__text_io__standard_output as Ada___spark__text_io__standard_output
  
  val as_put (item: Standard__string.string__) : unit
    reads { Ada___spark__text_io__standard_output.standard_output }
    requires { true }
    writes { Ada___spark__text_io__standard_output.standard_output }
    ensures { true }
end

module As_io_wrapper__as_put__3___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Ada___spark__text_io__standard_output as Ada___spark__text_io__standard_output
  use Ada___spark__text_io__standard_output as Ada___spark__text_io__standard_output
  
  val as_put (item: int) : unit
    reads { Ada___spark__text_io__standard_output.standard_output }
    requires { true }
    writes { Ada___spark__text_io__standard_output.standard_output }
    ensures { true }
end

module Airbag_system__read_acceleration__L_1
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_1
end

module Airbag_system__read_acceleration__L_2
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_2
end

module Airbag_system__read_acceleration__L_3
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_3
end

module Temp___String_Literal_214
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_214 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_214__def_axiom:
    forall __void_param : unit [temp___String_Literal_214 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_214 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_214 __void_param))
                 (2 : int)))
             = (108 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_214 __void_param))
                      (3 : int)))
                  = (101 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_214 __void_param))
                        (4 : int)))
                    = (97 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_214 __void_param))
                       (5 : int)))
                   = (115 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_214 __void_param))
                       (6 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_214 __void_param))
                         (7 : int)))
                     = (32 : int)))) /\
              (((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_214 __void_param))
                        (8 : int)))
                    = (116 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_214 __void_param))
                          (9 : int)))
                      = (121 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_214 __void_param))
                         (10 : int)))
                     = (112 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_214 __void_param))
                         (11 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_214 __void_param))
                           (12 : int)))
                       = (32 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_214 __void_param))
                        (13 : int)))
                    = (105 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_214 __void_param))
                          (14 : int)))
                      = (110 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_214 __void_param))
                         (15 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_214 __void_param))
                         (16 : int)))
                     = (118 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_214 __void_param))
                           (17 : int)))
                       = (101 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_214 __void_param))
                         (18 : int)))
                     = (108 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_214 __void_param))
                           (19 : int)))
                       = (111 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_214 __void_param))
                           (20 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_214 __void_param))
                             (21 : int)))
                         = (105 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_214 __void_param))
                        (22 : int)))
                    = (116 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_214 __void_param))
                          (23 : int)))
                      = (121 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_214 __void_param))
                         (24 : int)))
                     = (48 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_214 __void_param))
                         (25 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_214 __void_param))
                           (26 : int)))
                       = (105 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_214 __void_param))
                         (27 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_214 __void_param))
                           (28 : int)))
                       = (32 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_214 __void_param))
                           (29 : int)))
                       = (109 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_214 __void_param))
                             (30 : int)))
                         = (101 : int))))) /\
               ((((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_214 __void_param))
                          (31 : int)))
                      = (116 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_214 __void_param))
                            (32 : int)))
                        = (114 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_214 __void_param))
                           (33 : int)))
                       = (101 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_214 __void_param))
                           (34 : int)))
                       = (115 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_214 __void_param))
                             (35 : int)))
                         = (47 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_214 __void_param))
                           (36 : int)))
                       = (104 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_214 __void_param))
                             (37 : int)))
                         = (111 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_214 __void_param))
                             (38 : int)))
                         = (117 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_214 __void_param))
                               (39 : int)))
                           = (114 : int))))))))
end

module Temp___String_Literal_217
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_217 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_217__def_axiom:
    forall __void_param : unit [temp___String_Literal_217 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_217 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_217 __void_param))
                 (2 : int)))
             = (108 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_217 __void_param))
                     (3 : int)))
                 = (101 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_217 __void_param))
                       (4 : int)))
                   = (97 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_217 __void_param))
                      (5 : int)))
                  = (115 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_217 __void_param))
                       (6 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_217 __void_param))
                         (7 : int)))
                     = (32 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_217 __void_param))
                        (8 : int)))
                    = (116 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_217 __void_param))
                       (9 : int)))
                   = (121 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_217 __void_param))
                         (10 : int)))
                     = (112 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_217 __void_param))
                        (11 : int)))
                    = (101 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_217 __void_param))
                         (12 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_217 __void_param))
                           (13 : int)))
                       = (105 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_217 __void_param))
                          (14 : int)))
                      = (110 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_217 __void_param))
                       (15 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_217 __void_param))
                         (16 : int)))
                     = (97 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_217 __void_param))
                        (17 : int)))
                    = (110 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_217 __void_param))
                         (18 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_217 __void_param))
                           (19 : int)))
                       = (105 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_217 __void_param))
                          (20 : int)))
                      = (110 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_217 __void_param))
                         (21 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_217 __void_param))
                           (22 : int)))
                       = (101 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_217 __void_param))
                          (23 : int)))
                      = (103 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_217 __void_param))
                          (24 : int)))
                      = (101 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_217 __void_param))
                            (25 : int)))
                        = (114 : int)))))))
end

module Temp___String_Literal_219
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_219 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_219__def_axiom:
    forall __void_param : unit [temp___String_Literal_219 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_219 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_219 __void_param))
                 (2 : int)))
             = (108 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_219 __void_param))
                      (3 : int)))
                  = (101 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_219 __void_param))
                        (4 : int)))
                    = (97 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_219 __void_param))
                       (5 : int)))
                   = (115 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_219 __void_param))
                       (6 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_219 __void_param))
                         (7 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_219 __void_param))
                       (8 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_219 __void_param))
                         (9 : int)))
                     = (121 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_219 __void_param))
                         (10 : int)))
                     = (112 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_219 __void_param))
                           (11 : int)))
                       = (101 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_219 __void_param))
                        (12 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_219 __void_param))
                          (13 : int)))
                      = (105 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_219 __void_param))
                         (14 : int)))
                     = (110 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_219 __void_param))
                         (15 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_219 __void_param))
                           (16 : int)))
                       = (97 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_219 __void_param))
                         (17 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_219 __void_param))
                           (18 : int)))
                       = (118 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_219 __void_param))
                           (19 : int)))
                       = (97 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_219 __void_param))
                             (20 : int)))
                         = (108 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_219 __void_param))
                        (21 : int)))
                    = (117 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_219 __void_param))
                          (22 : int)))
                      = (101 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_219 __void_param))
                         (23 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_219 __void_param))
                         (24 : int)))
                     = (98 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_219 __void_param))
                           (25 : int)))
                       = (101 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_219 __void_param))
                         (26 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_219 __void_param))
                           (27 : int)))
                       = (119 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_219 __void_param))
                           (28 : int)))
                       = (101 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_219 __void_param))
                             (29 : int)))
                         = (101 : int))))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_219 __void_param))
                         (30 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_219 __void_param))
                           (31 : int)))
                       = (32 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_219 __void_param))
                           (32 : int)))
                       = (48 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_219 __void_param))
                             (33 : int)))
                         = (32 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_219 __void_param))
                           (34 : int)))
                       = (97 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_219 __void_param))
                             (35 : int)))
                         = (110 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_219 __void_param))
                             (36 : int)))
                         = (100 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_219 __void_param))
                               (37 : int)))
                           = (32 : int))))))))
end

module Temp___String_Literal_221
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_221 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_221__def_axiom:
    forall __void_param : unit [temp___String_Literal_221 __void_param]. true
end

module Temp___String_Literal_226
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_226 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_226__def_axiom:
    forall __void_param : unit [temp___String_Literal_226 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_226 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_226 __void_param))
                 (2 : int)))
             = (108 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_226 __void_param))
                      (3 : int)))
                  = (101 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_226 __void_param))
                        (4 : int)))
                    = (97 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_226 __void_param))
                       (5 : int)))
                   = (115 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_226 __void_param))
                       (6 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_226 __void_param))
                         (7 : int)))
                     = (32 : int)))) /\
              (((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_226 __void_param))
                        (8 : int)))
                    = (116 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_226 __void_param))
                          (9 : int)))
                      = (121 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_226 __void_param))
                         (10 : int)))
                     = (112 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_226 __void_param))
                         (11 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_226 __void_param))
                           (12 : int)))
                       = (32 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_226 __void_param))
                        (13 : int)))
                    = (105 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_226 __void_param))
                          (14 : int)))
                      = (110 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_226 __void_param))
                         (15 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_226 __void_param))
                         (16 : int)))
                     = (118 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_226 __void_param))
                           (17 : int)))
                       = (101 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_226 __void_param))
                         (18 : int)))
                     = (108 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_226 __void_param))
                           (19 : int)))
                       = (111 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_226 __void_param))
                           (20 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_226 __void_param))
                             (21 : int)))
                         = (105 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_226 __void_param))
                        (22 : int)))
                    = (116 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_226 __void_param))
                          (23 : int)))
                      = (121 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_226 __void_param))
                         (24 : int)))
                     = (49 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_226 __void_param))
                         (25 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_226 __void_param))
                           (26 : int)))
                       = (105 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_226 __void_param))
                         (27 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_226 __void_param))
                           (28 : int)))
                       = (32 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_226 __void_param))
                           (29 : int)))
                       = (109 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_226 __void_param))
                             (30 : int)))
                         = (101 : int))))) /\
               ((((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_226 __void_param))
                          (31 : int)))
                      = (116 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_226 __void_param))
                            (32 : int)))
                        = (114 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_226 __void_param))
                           (33 : int)))
                       = (101 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_226 __void_param))
                           (34 : int)))
                       = (115 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_226 __void_param))
                             (35 : int)))
                         = (47 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_226 __void_param))
                           (36 : int)))
                       = (104 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_226 __void_param))
                             (37 : int)))
                         = (111 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_226 __void_param))
                             (38 : int)))
                         = (117 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_226 __void_param))
                               (39 : int)))
                           = (114 : int))))))))
end

module Temp___String_Literal_229
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_229 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_229__def_axiom:
    forall __void_param : unit [temp___String_Literal_229 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_229 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_229 __void_param))
                 (2 : int)))
             = (108 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_229 __void_param))
                     (3 : int)))
                 = (101 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_229 __void_param))
                       (4 : int)))
                   = (97 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_229 __void_param))
                      (5 : int)))
                  = (115 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_229 __void_param))
                       (6 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_229 __void_param))
                         (7 : int)))
                     = (32 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_229 __void_param))
                        (8 : int)))
                    = (116 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_229 __void_param))
                       (9 : int)))
                   = (121 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_229 __void_param))
                         (10 : int)))
                     = (112 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_229 __void_param))
                        (11 : int)))
                    = (101 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_229 __void_param))
                         (12 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_229 __void_param))
                           (13 : int)))
                       = (105 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_229 __void_param))
                          (14 : int)))
                      = (110 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_229 __void_param))
                       (15 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_229 __void_param))
                         (16 : int)))
                     = (97 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_229 __void_param))
                        (17 : int)))
                    = (110 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_229 __void_param))
                         (18 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_229 __void_param))
                           (19 : int)))
                       = (105 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_229 __void_param))
                          (20 : int)))
                      = (110 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_229 __void_param))
                         (21 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_229 __void_param))
                           (22 : int)))
                       = (101 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_229 __void_param))
                          (23 : int)))
                      = (103 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_229 __void_param))
                          (24 : int)))
                      = (101 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_229 __void_param))
                            (25 : int)))
                        = (114 : int)))))))
end

module Temp___String_Literal_231
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_231 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_231__def_axiom:
    forall __void_param : unit [temp___String_Literal_231 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_231 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_231 __void_param))
                 (2 : int)))
             = (108 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_231 __void_param))
                      (3 : int)))
                  = (101 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_231 __void_param))
                        (4 : int)))
                    = (97 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_231 __void_param))
                       (5 : int)))
                   = (115 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_231 __void_param))
                       (6 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_231 __void_param))
                         (7 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_231 __void_param))
                       (8 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_231 __void_param))
                         (9 : int)))
                     = (121 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_231 __void_param))
                         (10 : int)))
                     = (112 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_231 __void_param))
                           (11 : int)))
                       = (101 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_231 __void_param))
                        (12 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_231 __void_param))
                          (13 : int)))
                      = (105 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_231 __void_param))
                         (14 : int)))
                     = (110 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_231 __void_param))
                         (15 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_231 __void_param))
                           (16 : int)))
                       = (97 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_231 __void_param))
                         (17 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_231 __void_param))
                           (18 : int)))
                       = (118 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_231 __void_param))
                           (19 : int)))
                       = (97 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_231 __void_param))
                             (20 : int)))
                         = (108 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_231 __void_param))
                        (21 : int)))
                    = (117 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_231 __void_param))
                          (22 : int)))
                      = (101 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_231 __void_param))
                         (23 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_231 __void_param))
                         (24 : int)))
                     = (98 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_231 __void_param))
                           (25 : int)))
                       = (101 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_231 __void_param))
                         (26 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_231 __void_param))
                           (27 : int)))
                       = (119 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_231 __void_param))
                           (28 : int)))
                       = (101 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_231 __void_param))
                             (29 : int)))
                         = (101 : int))))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_231 __void_param))
                         (30 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_231 __void_param))
                           (31 : int)))
                       = (32 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_231 __void_param))
                           (32 : int)))
                       = (48 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_231 __void_param))
                             (33 : int)))
                         = (32 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_231 __void_param))
                           (34 : int)))
                       = (97 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_231 __void_param))
                             (35 : int)))
                         = (110 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_231 __void_param))
                             (36 : int)))
                         = (100 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_231 __void_param))
                               (37 : int)))
                           = (32 : int))))))))
end

module Temp___String_Literal_233
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_233 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_233__def_axiom:
    forall __void_param : unit [temp___String_Literal_233 __void_param]. true
end

module Temp___String_Literal_238
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_238 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_238__def_axiom:
    forall __void_param : unit [temp___String_Literal_238 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_238 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_238 __void_param))
                 (2 : int)))
             = (108 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_238 __void_param))
                      (3 : int)))
                  = (101 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_238 __void_param))
                        (4 : int)))
                    = (97 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_238 __void_param))
                       (5 : int)))
                   = (115 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_238 __void_param))
                       (6 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_238 __void_param))
                         (7 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_238 __void_param))
                       (8 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_238 __void_param))
                         (9 : int)))
                     = (121 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_238 __void_param))
                         (10 : int)))
                     = (112 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_238 __void_param))
                           (11 : int)))
                       = (101 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_238 __void_param))
                        (12 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_238 __void_param))
                          (13 : int)))
                      = (105 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_238 __void_param))
                         (14 : int)))
                     = (110 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_238 __void_param))
                         (15 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_238 __void_param))
                           (16 : int)))
                       = (116 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_238 __void_param))
                         (17 : int)))
                     = (105 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_238 __void_param))
                           (18 : int)))
                       = (109 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_238 __void_param))
                           (19 : int)))
                       = (101 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_238 __void_param))
                             (20 : int)))
                         = (32 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_238 __void_param))
                        (21 : int)))
                    = (111 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_238 __void_param))
                          (22 : int)))
                      = (102 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_238 __void_param))
                         (23 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_238 __void_param))
                         (24 : int)))
                     = (118 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_238 __void_param))
                           (25 : int)))
                       = (101 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_238 __void_param))
                         (26 : int)))
                     = (108 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_238 __void_param))
                           (27 : int)))
                       = (111 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_238 __void_param))
                           (28 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_238 __void_param))
                             (29 : int)))
                         = (105 : int))))) /\
               ((((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_238 __void_param))
                          (30 : int)))
                      = (116 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_238 __void_param))
                            (31 : int)))
                        = (121 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_238 __void_param))
                           (32 : int)))
                       = (32 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_238 __void_param))
                           (33 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_238 __void_param))
                             (34 : int)))
                         = (104 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_238 __void_param))
                           (35 : int)))
                       = (97 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_238 __void_param))
                             (36 : int)))
                         = (110 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_238 __void_param))
                             (37 : int)))
                         = (103 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_238 __void_param))
                               (38 : int)))
                           = (101 : int))))))))
end

module Temp___String_Literal_241
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_241 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_241__def_axiom:
    forall __void_param : unit [temp___String_Literal_241 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_241 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_241 __void_param))
                 (2 : int)))
             = (108 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_241 __void_param))
                     (3 : int)))
                 = (101 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_241 __void_param))
                       (4 : int)))
                   = (97 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_241 __void_param))
                      (5 : int)))
                  = (115 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_241 __void_param))
                       (6 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_241 __void_param))
                         (7 : int)))
                     = (32 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_241 __void_param))
                        (8 : int)))
                    = (116 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_241 __void_param))
                       (9 : int)))
                   = (121 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_241 __void_param))
                         (10 : int)))
                     = (112 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_241 __void_param))
                        (11 : int)))
                    = (101 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_241 __void_param))
                         (12 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_241 __void_param))
                           (13 : int)))
                       = (105 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_241 __void_param))
                          (14 : int)))
                      = (110 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_241 __void_param))
                       (15 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_241 __void_param))
                         (16 : int)))
                     = (97 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_241 __void_param))
                        (17 : int)))
                    = (110 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_241 __void_param))
                         (18 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_241 __void_param))
                           (19 : int)))
                       = (105 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_241 __void_param))
                          (20 : int)))
                      = (110 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_241 __void_param))
                         (21 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_241 __void_param))
                           (22 : int)))
                       = (101 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_241 __void_param))
                          (23 : int)))
                      = (103 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_241 __void_param))
                          (24 : int)))
                      = (101 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_241 __void_param))
                            (25 : int)))
                        = (114 : int)))))))
end

module Temp___String_Literal_243
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_243 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_243__def_axiom:
    forall __void_param : unit [temp___String_Literal_243 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_243 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_243 __void_param))
                 (2 : int)))
             = (108 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_243 __void_param))
                      (3 : int)))
                  = (101 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_243 __void_param))
                        (4 : int)))
                    = (97 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_243 __void_param))
                       (5 : int)))
                   = (115 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_243 __void_param))
                       (6 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_243 __void_param))
                         (7 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_243 __void_param))
                       (8 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_243 __void_param))
                         (9 : int)))
                     = (121 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_243 __void_param))
                         (10 : int)))
                     = (112 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_243 __void_param))
                           (11 : int)))
                       = (101 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_243 __void_param))
                        (12 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_243 __void_param))
                          (13 : int)))
                      = (105 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_243 __void_param))
                         (14 : int)))
                     = (110 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_243 __void_param))
                         (15 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_243 __void_param))
                           (16 : int)))
                       = (97 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_243 __void_param))
                         (17 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_243 __void_param))
                           (18 : int)))
                       = (118 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_243 __void_param))
                           (19 : int)))
                       = (97 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_243 __void_param))
                             (20 : int)))
                         = (108 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_243 __void_param))
                        (21 : int)))
                    = (117 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_243 __void_param))
                          (22 : int)))
                      = (101 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_243 __void_param))
                         (23 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_243 __void_param))
                         (24 : int)))
                     = (98 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_243 __void_param))
                           (25 : int)))
                       = (101 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_243 __void_param))
                         (26 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_243 __void_param))
                           (27 : int)))
                       = (119 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_243 __void_param))
                           (28 : int)))
                       = (101 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_243 __void_param))
                             (29 : int)))
                         = (101 : int))))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_243 __void_param))
                         (30 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_243 __void_param))
                           (31 : int)))
                       = (32 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_243 __void_param))
                           (32 : int)))
                       = (48 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_243 __void_param))
                             (33 : int)))
                         = (32 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_243 __void_param))
                           (34 : int)))
                       = (97 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_243 __void_param))
                             (35 : int)))
                         = (110 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_243 __void_param))
                             (36 : int)))
                         = (100 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_243 __void_param))
                               (37 : int)))
                           = (32 : int))))))))
end

module Temp___String_Literal_245
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_245 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_245__def_axiom:
    forall __void_param : unit [temp___String_Literal_245 __void_param]. true
end

module Standard__positive___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__positive as Standard__positive
  
  predicate dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) =
    if ((temp___is_init_49 = True) \/
          (Standard__positive.first <= Standard__positive.last)) then
      (((Standard__positive.dynamic_property Standard__positive.first)
          Standard__positive.last)
         temp___expr_53)
    else true
  
  val dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_53 : int))
                      (temp___is_init_49 : bool))
                     (temp___skip_constant_50 : bool))
                    (temp___do_toplevel_51 : bool))
                   (temp___do_typ_inv_52 : bool)) }
  
  predicate default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) =
    true
  
  val default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_54 : int))
                   (temp___skip_top_level_55 : bool)) }
end

module Standard__character___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  
  predicate dynamic_invariant (temp___expr_81: int) (temp___is_init_77: bool) (temp___skip_constant_78: bool) (temp___do_toplevel_79: bool) (temp___do_typ_inv_80: bool) =
    if ((temp___is_init_77 = True) \/
          (Standard__character.first <= Standard__character.last)) then
      (((Standard__character.dynamic_property Standard__character.first)
          Standard__character.last)
         temp___expr_81)
    else true
  
  val dynamic_invariant (temp___expr_81: int) (temp___is_init_77: bool) (temp___skip_constant_78: bool) (temp___do_toplevel_79: bool) (temp___do_typ_inv_80: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_81 : int))
                      (temp___is_init_77 : bool))
                     (temp___skip_constant_78 : bool))
                    (temp___do_toplevel_79 : bool))
                   (temp___do_typ_inv_80 : bool)) }
  
  predicate default_initial_assumption (temp___expr_82: int) (temp___skip_top_level_83: bool) =
    true
  
  val default_initial_assumption (temp___expr_82: int) (temp___skip_top_level_83: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_82 : int))
                   (temp___skip_top_level_83 : bool)) }
end

module Standard__string___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__positive as Standard__positive
  use Standard__string as Standard__string
  
  predicate dynamic_invariant (temp___expr_103: Standard__string.string__) (temp___is_init_99: bool) (temp___skip_constant_100: bool) (temp___do_toplevel_101: bool) (temp___do_typ_inv_102: bool) =
    if temp___skip_constant_100 then true
    else
      ((((Standard__string.dynamic_property Standard__positive.first)
           Standard__positive.last)
          (Standard__string.first temp___expr_103))
         (Standard__string.last temp___expr_103))
  
  val dynamic_invariant (temp___expr_103: Standard__string.string__) (temp___is_init_99: bool) (temp___skip_constant_100: bool) (temp___do_toplevel_101: bool) (temp___do_typ_inv_102: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_103 : Standard__string.string__))
                      (temp___is_init_99 : bool))
                     (temp___skip_constant_100 : bool))
                    (temp___do_toplevel_101 : bool))
                   (temp___do_typ_inv_102 : bool)) }
end

module Airbag_system__read_acceleration__v0___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Airbag_system__read_acceleration__v1___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Airbag_system__read_acceleration__t___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Airbag_system__read_acceleration__L_1___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Airbag_system__read_acceleration__L_2___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Airbag_system__read_acceleration__L_3___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Airbag_system__acceleration_range___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Airbag_system__acceleration_range as Airbag_system__acceleration_range
  
  predicate dynamic_invariant (temp___expr_168: int) (temp___is_init_164: bool) (temp___skip_constant_165: bool) (temp___do_toplevel_166: bool) (temp___do_typ_inv_167: bool) =
    if ((temp___is_init_164 = True) \/
          (Airbag_system__acceleration_range.first
             <= Airbag_system__acceleration_range.last)) then
      (((Airbag_system__acceleration_range.dynamic_property
           Airbag_system__acceleration_range.first)
          Airbag_system__acceleration_range.last)
         temp___expr_168)
    else true
  
  val dynamic_invariant (temp___expr_168: int) (temp___is_init_164: bool) (temp___skip_constant_165: bool) (temp___do_toplevel_166: bool) (temp___do_typ_inv_167: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_168 : int))
                      (temp___is_init_164 : bool))
                     (temp___skip_constant_165 : bool))
                    (temp___do_toplevel_166 : bool))
                   (temp___do_typ_inv_167 : bool)) }
  
  predicate default_initial_assumption (temp___expr_169: int) (temp___skip_top_level_170: bool) =
    true
  
  val default_initial_assumption (temp___expr_169: int) (temp___skip_top_level_170: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_169 : int))
                   (temp___skip_top_level_170 : bool)) }
end

module Airbag_system__velocity_range___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Airbag_system__velocity_range as Airbag_system__velocity_range
  
  predicate dynamic_invariant (temp___expr_175: int) (temp___is_init_171: bool) (temp___skip_constant_172: bool) (temp___do_toplevel_173: bool) (temp___do_typ_inv_174: bool) =
    if ((temp___is_init_171 = True) \/
          (Airbag_system__velocity_range.first
             <= Airbag_system__velocity_range.last)) then
      (((Airbag_system__velocity_range.dynamic_property
           Airbag_system__velocity_range.first)
          Airbag_system__velocity_range.last)
         temp___expr_175)
    else true
  
  val dynamic_invariant (temp___expr_175: int) (temp___is_init_171: bool) (temp___skip_constant_172: bool) (temp___do_toplevel_173: bool) (temp___do_typ_inv_174: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_175 : int))
                      (temp___is_init_171 : bool))
                     (temp___skip_constant_172 : bool))
                    (temp___do_toplevel_173 : bool))
                   (temp___do_typ_inv_174 : bool)) }
  
  predicate default_initial_assumption (temp___expr_176: int) (temp___skip_top_level_177: bool) =
    true
  
  val default_initial_assumption (temp___expr_176: int) (temp___skip_top_level_177: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_176 : int))
                   (temp___skip_top_level_177 : bool)) }
end

module Airbag_system__time_range___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Airbag_system__time_range as Airbag_system__time_range
  
  predicate dynamic_invariant (temp___expr_182: int) (temp___is_init_178: bool) (temp___skip_constant_179: bool) (temp___do_toplevel_180: bool) (temp___do_typ_inv_181: bool) =
    if ((temp___is_init_178 = True) \/
          (Airbag_system__time_range.first <= Airbag_system__time_range.last)) then
      (((Airbag_system__time_range.dynamic_property
           Airbag_system__time_range.first)
          Airbag_system__time_range.last)
         temp___expr_182)
    else true
  
  val dynamic_invariant (temp___expr_182: int) (temp___is_init_178: bool) (temp___skip_constant_179: bool) (temp___do_toplevel_180: bool) (temp___do_typ_inv_181: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_182 : int))
                      (temp___is_init_178 : bool))
                     (temp___skip_constant_179 : bool))
                    (temp___do_toplevel_180 : bool))
                   (temp___do_typ_inv_181 : bool)) }
  
  predicate default_initial_assumption (temp___expr_183: int) (temp___skip_top_level_184: bool) =
    true
  
  val default_initial_assumption (temp___expr_183: int) (temp___skip_top_level_184: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_183 : int))
                   (temp___skip_top_level_184 : bool)) }
end

module Airbag_system__status_airbag_system_type___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Airbag_system__status_airbag_system_type as Airbag_system__status_airbag_system_type
  
  predicate dynamic_invariant (temp___expr_189: int) (temp___is_init_185: bool) (temp___skip_constant_186: bool) (temp___do_toplevel_187: bool) (temp___do_typ_inv_188: bool) =
    if ((temp___is_init_185 = True) \/
          (Airbag_system__status_airbag_system_type.first
             <= Airbag_system__status_airbag_system_type.last)) then
      (((Airbag_system__status_airbag_system_type.dynamic_property
           Airbag_system__status_airbag_system_type.first)
          Airbag_system__status_airbag_system_type.last)
         temp___expr_189)
    else true
  
  val dynamic_invariant (temp___expr_189: int) (temp___is_init_185: bool) (temp___skip_constant_186: bool) (temp___do_toplevel_187: bool) (temp___do_typ_inv_188: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_189 : int))
                      (temp___is_init_185 : bool))
                     (temp___skip_constant_186 : bool))
                    (temp___do_toplevel_187 : bool))
                   (temp___do_typ_inv_188 : bool)) }
  
  predicate default_initial_assumption (temp___expr_190: int) (temp___skip_top_level_191: bool) =
    true
  
  val default_initial_assumption (temp___expr_190: int) (temp___skip_top_level_191: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_190 : int))
                   (temp___skip_top_level_191 : bool)) }
end

module Airbag_system__status_system___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Airbag_system__read_acceleration__subprogram_def
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__string as Standard__string
  use Airbag_system__status_system as Airbag_system__status_system
  use Airbag_system__status_system_type as Airbag_system__status_system_type
  use Airbag_system__status_system_type___axiom as Airbag_system__status_system_type___axiom
  use Airbag_system__getgforce___axiom as Airbag_system__getgforce___axiom
  use Airbag_system__read_acceleration__v0 as Airbag_system__read_acceleration__v0
  use Airbag_system__read_acceleration__v1 as Airbag_system__read_acceleration__v1
  use Airbag_system__read_acceleration__t as Airbag_system__read_acceleration__t
  use As_io_wrapper__as_put_line___axiom as As_io_wrapper__as_put_line___axiom
  use As_io_wrapper__as_get__2___axiom as As_io_wrapper__as_get__2___axiom
  use As_io_wrapper__as_put__2___axiom as As_io_wrapper__as_put__2___axiom
  use As_io_wrapper__as_put__3___axiom as As_io_wrapper__as_put__3___axiom
  use Airbag_system__acceleration_range as Airbag_system__acceleration_range
  use Airbag_system__acceleration_range__rep as Airbag_system__acceleration_range__rep
  use Airbag_system__velocity_range as Airbag_system__velocity_range
  use Airbag_system__velocity_range__rep as Airbag_system__velocity_range__rep
  use Airbag_system__time_range as Airbag_system__time_range
  use Airbag_system__time_range__rep as Airbag_system__time_range__rep
  use Airbag_system__read_acceleration__L_1 as Airbag_system__read_acceleration__L_1
  use Airbag_system__read_acceleration__L_2 as Airbag_system__read_acceleration__L_2
  use Airbag_system__read_acceleration__L_3 as Airbag_system__read_acceleration__L_3
  use Temp___String_Literal_214 as Temp___String_Literal_214
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_217 as Temp___String_Literal_217
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_219 as Temp___String_Literal_219
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_221 as Temp___String_Literal_221
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_226 as Temp___String_Literal_226
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_229 as Temp___String_Literal_229
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_231 as Temp___String_Literal_231
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_233 as Temp___String_Literal_233
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_238 as Temp___String_Literal_238
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_241 as Temp___String_Literal_241
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_243 as Temp___String_Literal_243
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_245 as Temp___String_Literal_245
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__positive___axiom as Standard__positive___axiom
  use Standard__character___axiom as Standard__character___axiom
  use Standard__string___axiom as Standard__string___axiom
  use Standard__integer___axiom as Standard__integer___axiom
  use Airbag_system__read_acceleration__v0___axiom as Airbag_system__read_acceleration__v0___axiom
  use Airbag_system__read_acceleration__v1___axiom as Airbag_system__read_acceleration__v1___axiom
  use Airbag_system__read_acceleration__t___axiom as Airbag_system__read_acceleration__t___axiom
  use Airbag_system__read_acceleration__L_1___axiom as Airbag_system__read_acceleration__L_1___axiom
  use Airbag_system__read_acceleration__L_2___axiom as Airbag_system__read_acceleration__L_2___axiom
  use Airbag_system__read_acceleration__L_3___axiom as Airbag_system__read_acceleration__L_3___axiom
  use Airbag_system__acceleration_range___axiom as Airbag_system__acceleration_range___axiom
  use Airbag_system__velocity_range___axiom as Airbag_system__velocity_range___axiom
  use Airbag_system__time_range___axiom as Airbag_system__time_range___axiom
  use Airbag_system__status_airbag_system_type___axiom as Airbag_system__status_airbag_system_type___axiom
  use Airbag_system__status_system_type___axiom as Airbag_system__status_system_type___axiom
  use Airbag_system__status_system___axiom as Airbag_system__status_system___axiom
  use Airbag_system__getgforce___axiom as Airbag_system__getgforce___axiom
  use As_io_wrapper__as_put__2___axiom as As_io_wrapper__as_put__2___axiom
  use As_io_wrapper__as_put_line___axiom as As_io_wrapper__as_put_line___axiom
  use As_io_wrapper__as_get__2___axiom as As_io_wrapper__as_get__2___axiom
  use As_io_wrapper__as_put__3___axiom as As_io_wrapper__as_put__3___axiom
  
  let def (__void_param : unit)
    requires { [#"airbag_system.ads" 31 0 0] true }
  = [@vc:divergent]
    (([@GNAT-comment:Assume dynamic invariants of inputs of the subprogram airbag_system.ads:31]
      ());
     ([#"airbag_system.ads" 31 0 0]
      assume {
        [#"airbag_system.ads" 31 0 0]
        (((((Airbag_system__status_system_type___axiom.dynamic_invariant
               { Airbag_system__status_system_type.__split_fields =
                   (Airbag_system__status_system_type.__split_fields__content
                       Airbag_system__status_system.status_system__split_fields) })
              True)
             False)
            True)
           True) });
     ([@GNAT-comment:Assume moved pointers in outputs of the subprogram airbag_system.ads:31]
      ());
     ([@GNAT-comment:Check for RTE in the Pre of the subprogram airbag_system.ads:31]
      ());
     ([#"airbag_system.ads" 31 0 0] ());
     ([@GNAT-comment:Assume Pre of the subprogram airbag_system.ads:31] ());
     ([#"airbag_system.ads" 31 0 0]
      (try
         ([#"airbag_system.adb" 10 0 0]
          (([#"airbag_system.adb" 10 0 0]
            assume {
              [#"airbag_system.adb" 10 0 0]
              ((Standard__integer___axiom.default_initial_assumption
                  (Airbag_system__read_acceleration__v0.v0.int__content))
                 False) });
           ([#"airbag_system.adb" 10 0 0]
            assume {
              [#"airbag_system.adb" 10 0 0]
              (((((Standard__integer___axiom.dynamic_invariant
                     (Airbag_system__read_acceleration__v0.v0.int__content))
                    False)
                   False)
                  True)
                 True) })));
         ([#"airbag_system.adb" 10 0 0]
          (([#"airbag_system.adb" 10 0 0]
            assume {
              [#"airbag_system.adb" 10 0 0]
              ((Standard__integer___axiom.default_initial_assumption
                  (Airbag_system__read_acceleration__v1.v1.int__content))
                 False) });
           ([#"airbag_system.adb" 10 0 0]
            assume {
              [#"airbag_system.adb" 10 0 0]
              (((((Standard__integer___axiom.dynamic_invariant
                     (Airbag_system__read_acceleration__v1.v1.int__content))
                    False)
                   False)
                  True)
                 True) })));
         ([#"airbag_system.adb" 10 0 0]
          (([#"airbag_system.adb" 10 0 0]
            assume {
              [#"airbag_system.adb" 10 0 0]
              ((Standard__integer___axiom.default_initial_assumption
                  (Airbag_system__read_acceleration__t.t.int__content))
                 False) });
           ([#"airbag_system.adb" 10 0 0]
            assume {
              [#"airbag_system.adb" 10 0 0]
              (((((Standard__integer___axiom.dynamic_invariant
                     (Airbag_system__read_acceleration__t.t.int__content))
                    False)
                   False)
                  True)
                 True) })));
         ([#"airbag_system.adb" 14 0 0] ());
         ([#"airbag_system.adb" 23 0 0] ());
         ([#"airbag_system.adb" 32 0 0] ());
         ([@GP_Sloc:airbag_system.adb:13:7] [#"airbag_system.adb" 13 0 0] ());
         ([@GP_Sloc:airbag_system.adb:13:7]
          [#"airbag_system.adb" 13 0 0]
          (([#"airbag_system.adb" 13 0 0] (val _f : unit in
                                           _f));
           (As_io_wrapper__as_put_line___axiom.as_put_line
              (let temp___215 =
                 Temp___String_Literal_214.temp___String_Literal_214 () in
               ((Standard__string.of_array temp___215) (1 : int)) (39 : int)))));
         ([@GP_Sloc:airbag_system.adb:14:7]
          [#"airbag_system.adb" 14 0 0]
          (([@GNAT-comment:Translation of an Ada loop from airbag_system.adb:14]
            ());
           (if True then
              ([#"airbag_system.adb" 14 0 0]
               (try
                  ([@GNAT-comment:While loop translating the Ada loop from airbag_system.adb:14]
                   ());
                  ([#"airbag_system.adb" 14 0 0]
                   [#"airbag_system.adb" 14 0 0]
                   (([@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                     ());
                    while True do
                      ([@GNAT-comment:gnat_ast_to_ptree: code after the loop invariant]
                       (([@GNAT-comment:Assume implicit invariants from the loop airbag_system.adb:14]
                         ());
                        ([#"airbag_system.adb" 14 0 0]
                         assume {
                           [#"airbag_system.adb" 14 0 0]
                           ((true /\
                               (((((Standard__integer___axiom.dynamic_invariant
                                      (Airbag_system__read_acceleration__v0.v0.int__content))
                                     False)
                                    True)
                                   True)
                                  True)) /\
                              (true /\ true)) });
                        ([@GNAT-comment:Continuation of loop after loop invariant and variant]
                         ());
                        ([@GP_Sloc:airbag_system.adb:15:17]
                         [#"airbag_system.adb" 15 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:15:10]
                         [#"airbag_system.adb" 15 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:15:10]
                         [#"airbag_system.adb" 15 0 0]
                         (let temp___compl_216 =
                            Airbag_system__read_acceleration__v0.v0.int__content in
                          ([#"airbag_system.adb" 15 0 0]
                           (val _f : unit in
                            _f));
                          ((As_io_wrapper__as_get__2___axiom.as_get
                              Airbag_system__read_acceleration__v0.v0)
                             (let temp___218 =
                                Temp___String_Literal_217.temp___String_Literal_217
                                  () in
                              ((Standard__string.of_array temp___218)
                                 (1 : int))
                                (25 : int)))));
                        ([@GP_Sloc:airbag_system.adb:16:21]
                         [#"airbag_system.adb" 16 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:16:39]
                         [#"airbag_system.adb" 16 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:16:10]
                         [#"airbag_system.adb" 16 0 0]
                         (if ((Boolean.andb
                                 ((Airbag_system__read_acceleration__v0.v0.int__content)
                                    > ((- 300000) : int)))
                                ((Airbag_system__read_acceleration__v0.v0.int__content)
                                   <= (300000 : int))) then
                            ([#"airbag_system.adb" 16 0 0]
                             (raise Airbag_system__read_acceleration__L_1.L_1))
                          else ()));
                        ([@GP_Sloc:airbag_system.adb:17:10]
                         [#"airbag_system.adb" 17 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:17:10]
                         [#"airbag_system.adb" 17 0 0]
                         (([#"airbag_system.adb" 17 0 0]
                           (val _f : unit in
                            _f));
                          (As_io_wrapper__as_put__2___axiom.as_put
                             (let temp___220 =
                                Temp___String_Literal_219.temp___String_Literal_219
                                  () in
                              ((Standard__string.of_array temp___220)
                                 (1 : int))
                                (37 : int)))));
                        ([@GP_Sloc:airbag_system.adb:18:10]
                         [#"airbag_system.adb" 18 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:18:10]
                         [#"airbag_system.adb" 18 0 0]
                         (([#"airbag_system.adb" 18 0 0]
                           (val _f : unit in
                            _f));
                          (As_io_wrapper__as_put__3___axiom.as_put
                             (300000 : int))));
                        ([@GP_Sloc:airbag_system.adb:19:10]
                         [#"airbag_system.adb" 19 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:19:10]
                         [#"airbag_system.adb" 19 0 0]
                         (([#"airbag_system.adb" 19 0 0]
                           (val _f : unit in
                            _f));
                          (As_io_wrapper__as_put_line___axiom.as_put_line
                             (let temp___222 =
                                Temp___String_Literal_221.temp___String_Literal_221
                                  () in
                              ((Standard__string.of_array temp___222)
                                 (1 : int))
                                (0 : int)))));
                        ([@GNAT-comment:Check for the exit condition and loop statements appearing before the loop invariant of loop airbag_system.adb:14]
                         ());
                        (if False then
                           (raise Airbag_system__read_acceleration__L_1.L_1)
                         else ())));
                      ([@GNAT-comment:gnat_ast_to_ptree: code before the loop invariant]
                       [@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                       ());
                      ([@GNAT-comment:gnat_ast_to_ptree: code checking the variants]
                       ())
                    done))
                with Airbag_system__read_acceleration__L_1.L_1 -> ()
                end))
            else ())));
         ([@GP_Sloc:airbag_system.adb:21:7] [#"airbag_system.adb" 21 0 0] ());
         ([@GP_Sloc:airbag_system.adb:21:65] [#"airbag_system.adb" 21 0 0] ());
         ([@GP_Sloc:airbag_system.adb:21:47]
          [#"airbag_system.adb" 21 0 0]
          (let temp___225 =
             let temp___224 =
               { Airbag_system__status_system_type.__split_fields =
                   (Airbag_system__status_system_type.__split_fields__content
                       Airbag_system__status_system.status_system__split_fields) } in
             ([#"airbag_system.adb" 21 0 0]
              (begin
                 ensures { true }
                 let _ =
                   let _ =
                     (Airbag_system__status_system_type.__split_fields
                         temp___224).Airbag_system__status_system_type.rec__airbag_system__status_system_type__initial_velocity_measured in
                   () in
                 ()
               end));
             ({ temp___224 with
                Airbag_system__status_system_type.__split_fields =
                  ({ (Airbag_system__status_system_type.__split_fields
                         temp___224) with
                     Airbag_system__status_system_type.rec__airbag_system__status_system_type__initial_velocity_measured =
                       (Airbag_system__velocity_range__rep.of_rep
                          ([#"airbag_system.adb" 21 0 0]
                           [@comment:      Status_System.Initial_Velocity_Measured := Velocity_Range(V0);                                                                 ^ airbag_system.adb:21:65:VC_RANGE_CHECK]
                           [@GP_Shape:status_system_assign__typeconv]
                           [@vc:annotation]
                           [@GP_Reason:VC_RANGE_CHECK]
                           [@GP_Id:0]
                           [@GP_Sloc:airbag_system.adb:21:65]
                           (Airbag_system__velocity_range.range_check_
                              (Airbag_system__read_acceleration__v0.v0.int__content)))) }) }) in
           Airbag_system__status_system.status_system__split_fields.Airbag_system__status_system_type.__split_fields__content <-
             (Airbag_system__status_system_type.__split_fields temp___225)));
         ([@GP_Sloc:airbag_system.adb:22:7] [#"airbag_system.adb" 22 0 0] ());
         ([@GP_Sloc:airbag_system.adb:22:7]
          [#"airbag_system.adb" 22 0 0]
          (([#"airbag_system.adb" 22 0 0] (val _f : unit in
                                           _f));
           (As_io_wrapper__as_put_line___axiom.as_put_line
              (let temp___227 =
                 Temp___String_Literal_226.temp___String_Literal_226 () in
               ((Standard__string.of_array temp___227) (1 : int)) (39 : int)))));
         ([@GP_Sloc:airbag_system.adb:23:7]
          [#"airbag_system.adb" 23 0 0]
          (([@GNAT-comment:Translation of an Ada loop from airbag_system.adb:23]
            ());
           (if True then
              ([#"airbag_system.adb" 23 0 0]
               (try
                  ([@GNAT-comment:While loop translating the Ada loop from airbag_system.adb:23]
                   ());
                  ([#"airbag_system.adb" 23 0 0]
                   [#"airbag_system.adb" 23 0 0]
                   (([@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                     ());
                    while True do
                      ([@GNAT-comment:gnat_ast_to_ptree: code after the loop invariant]
                       (([@GNAT-comment:Assume implicit invariants from the loop airbag_system.adb:23]
                         ());
                        ([#"airbag_system.adb" 23 0 0]
                         assume {
                           [#"airbag_system.adb" 23 0 0]
                           ((true /\
                               (((((Standard__integer___axiom.dynamic_invariant
                                      (Airbag_system__read_acceleration__v1.v1.int__content))
                                     False)
                                    True)
                                   True)
                                  True)) /\
                              (true /\ true)) });
                        ([@GNAT-comment:Continuation of loop after loop invariant and variant]
                         ());
                        ([@GP_Sloc:airbag_system.adb:24:17]
                         [#"airbag_system.adb" 24 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:24:10]
                         [#"airbag_system.adb" 24 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:24:10]
                         [#"airbag_system.adb" 24 0 0]
                         (let temp___compl_228 =
                            Airbag_system__read_acceleration__v1.v1.int__content in
                          ([#"airbag_system.adb" 24 0 0]
                           (val _f : unit in
                            _f));
                          ((As_io_wrapper__as_get__2___axiom.as_get
                              Airbag_system__read_acceleration__v1.v1)
                             (let temp___230 =
                                Temp___String_Literal_229.temp___String_Literal_229
                                  () in
                              ((Standard__string.of_array temp___230)
                                 (1 : int))
                                (25 : int)))));
                        ([@GP_Sloc:airbag_system.adb:25:21]
                         [#"airbag_system.adb" 25 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:25:39]
                         [#"airbag_system.adb" 25 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:25:10]
                         [#"airbag_system.adb" 25 0 0]
                         (if ((Boolean.andb
                                 ((Airbag_system__read_acceleration__v1.v1.int__content)
                                    > ((- 300000) : int)))
                                ((Airbag_system__read_acceleration__v1.v1.int__content)
                                   <= (300000 : int))) then
                            ([#"airbag_system.adb" 25 0 0]
                             (raise Airbag_system__read_acceleration__L_2.L_2))
                          else ()));
                        ([@GP_Sloc:airbag_system.adb:26:10]
                         [#"airbag_system.adb" 26 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:26:10]
                         [#"airbag_system.adb" 26 0 0]
                         (([#"airbag_system.adb" 26 0 0]
                           (val _f : unit in
                            _f));
                          (As_io_wrapper__as_put__2___axiom.as_put
                             (let temp___232 =
                                Temp___String_Literal_231.temp___String_Literal_231
                                  () in
                              ((Standard__string.of_array temp___232)
                                 (1 : int))
                                (37 : int)))));
                        ([@GP_Sloc:airbag_system.adb:27:10]
                         [#"airbag_system.adb" 27 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:27:10]
                         [#"airbag_system.adb" 27 0 0]
                         (([#"airbag_system.adb" 27 0 0]
                           (val _f : unit in
                            _f));
                          (As_io_wrapper__as_put__3___axiom.as_put
                             (300000 : int))));
                        ([@GP_Sloc:airbag_system.adb:28:10]
                         [#"airbag_system.adb" 28 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:28:10]
                         [#"airbag_system.adb" 28 0 0]
                         (([#"airbag_system.adb" 28 0 0]
                           (val _f : unit in
                            _f));
                          (As_io_wrapper__as_put_line___axiom.as_put_line
                             (let temp___234 =
                                Temp___String_Literal_233.temp___String_Literal_233
                                  () in
                              ((Standard__string.of_array temp___234)
                                 (1 : int))
                                (0 : int)))));
                        ([@GNAT-comment:Check for the exit condition and loop statements appearing before the loop invariant of loop airbag_system.adb:23]
                         ());
                        (if False then
                           (raise Airbag_system__read_acceleration__L_2.L_2)
                         else ())));
                      ([@GNAT-comment:gnat_ast_to_ptree: code before the loop invariant]
                       [@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                       ());
                      ([@GNAT-comment:gnat_ast_to_ptree: code checking the variants]
                       ())
                    done))
                with Airbag_system__read_acceleration__L_2.L_2 -> ()
                end))
            else ())));
         ([@GP_Sloc:airbag_system.adb:30:7] [#"airbag_system.adb" 30 0 0] ());
         ([@GP_Sloc:airbag_system.adb:30:63] [#"airbag_system.adb" 30 0 0] ());
         ([@GP_Sloc:airbag_system.adb:30:45]
          [#"airbag_system.adb" 30 0 0]
          (let temp___237 =
             let temp___236 =
               { Airbag_system__status_system_type.__split_fields =
                   (Airbag_system__status_system_type.__split_fields__content
                       Airbag_system__status_system.status_system__split_fields) } in
             ([#"airbag_system.adb" 30 0 0]
              (begin
                 ensures { true }
                 let _ =
                   let _ =
                     (Airbag_system__status_system_type.__split_fields
                         temp___236).Airbag_system__status_system_type.rec__airbag_system__status_system_type__final_velocity_measured in
                   () in
                 ()
               end));
             ({ temp___236 with
                Airbag_system__status_system_type.__split_fields =
                  ({ (Airbag_system__status_system_type.__split_fields
                         temp___236) with
                     Airbag_system__status_system_type.rec__airbag_system__status_system_type__final_velocity_measured =
                       (Airbag_system__velocity_range__rep.of_rep
                          ([#"airbag_system.adb" 30 0 0]
                           [@GP_Shape:status_system_assign__typeconv]
                           [@vc:annotation]
                           [@GP_Sloc:airbag_system.adb:30:63]
                           [@GP_Reason:VC_RANGE_CHECK]
                           [@GP_Id:1]
                           [@comment:      Status_System.Final_Velocity_Measured := Velocity_Range(V1);                                                               ^ airbag_system.adb:30:63:VC_RANGE_CHECK]
                           (Airbag_system__velocity_range.range_check_
                              (Airbag_system__read_acceleration__v1.v1.int__content)))) }) }) in
           Airbag_system__status_system.status_system__split_fields.Airbag_system__status_system_type.__split_fields__content <-
             (Airbag_system__status_system_type.__split_fields temp___237)));
         ([@GP_Sloc:airbag_system.adb:31:7] [#"airbag_system.adb" 31 0 0] ());
         ([@GP_Sloc:airbag_system.adb:31:7]
          [#"airbag_system.adb" 31 0 0]
          (([#"airbag_system.adb" 31 0 0] (val _f : unit in
                                           _f));
           (As_io_wrapper__as_put_line___axiom.as_put_line
              (let temp___239 =
                 Temp___String_Literal_238.temp___String_Literal_238 () in
               ((Standard__string.of_array temp___239) (1 : int)) (38 : int)))));
         ([@GP_Sloc:airbag_system.adb:32:7]
          [#"airbag_system.adb" 32 0 0]
          (([@GNAT-comment:Translation of an Ada loop from airbag_system.adb:32]
            ());
           (if True then
              ([#"airbag_system.adb" 32 0 0]
               (try
                  ([@GNAT-comment:While loop translating the Ada loop from airbag_system.adb:32]
                   ());
                  ([#"airbag_system.adb" 32 0 0]
                   [#"airbag_system.adb" 32 0 0]
                   (([@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                     ());
                    while True do
                      ([@GNAT-comment:gnat_ast_to_ptree: code after the loop invariant]
                       (([@GNAT-comment:Assume implicit invariants from the loop airbag_system.adb:32]
                         ());
                        ([#"airbag_system.adb" 32 0 0]
                         assume {
                           [#"airbag_system.adb" 32 0 0]
                           ((true /\
                               (((((Standard__integer___axiom.dynamic_invariant
                                      (Airbag_system__read_acceleration__t.t.int__content))
                                     False)
                                    True)
                                   True)
                                  True)) /\
                              (true /\ true)) });
                        ([@GNAT-comment:Continuation of loop after loop invariant and variant]
                         ());
                        ([@GP_Sloc:airbag_system.adb:33:17]
                         [#"airbag_system.adb" 33 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:33:10]
                         [#"airbag_system.adb" 33 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:33:10]
                         [#"airbag_system.adb" 33 0 0]
                         (let temp___compl_240 =
                            Airbag_system__read_acceleration__t.t.int__content in
                          ([#"airbag_system.adb" 33 0 0]
                           (val _f : unit in
                            _f));
                          ((As_io_wrapper__as_get__2___axiom.as_get
                              Airbag_system__read_acceleration__t.t)
                             (let temp___242 =
                                Temp___String_Literal_241.temp___String_Literal_241
                                  () in
                              ((Standard__string.of_array temp___242)
                                 (1 : int))
                                (25 : int)))));
                        ([@GP_Sloc:airbag_system.adb:34:21]
                         [#"airbag_system.adb" 34 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:34:33]
                         [#"airbag_system.adb" 34 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:34:10]
                         [#"airbag_system.adb" 34 0 0]
                         (if ((Boolean.andb
                                 ((Airbag_system__read_acceleration__t.t.int__content)
                                    > (0 : int)))
                                ((Airbag_system__read_acceleration__t.t.int__content)
                                   <= (1000 : int))) then
                            ([#"airbag_system.adb" 34 0 0]
                             (raise Airbag_system__read_acceleration__L_3.L_3))
                          else ()));
                        ([@GP_Sloc:airbag_system.adb:35:10]
                         [#"airbag_system.adb" 35 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:35:10]
                         [#"airbag_system.adb" 35 0 0]
                         (([#"airbag_system.adb" 35 0 0]
                           (val _f : unit in
                            _f));
                          (As_io_wrapper__as_put__2___axiom.as_put
                             (let temp___244 =
                                Temp___String_Literal_243.temp___String_Literal_243
                                  () in
                              ((Standard__string.of_array temp___244)
                                 (1 : int))
                                (37 : int)))));
                        ([@GP_Sloc:airbag_system.adb:36:10]
                         [#"airbag_system.adb" 36 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:36:10]
                         [#"airbag_system.adb" 36 0 0]
                         (([#"airbag_system.adb" 36 0 0]
                           (val _f : unit in
                            _f));
                          (As_io_wrapper__as_put__3___axiom.as_put
                             (1000 : int))));
                        ([@GP_Sloc:airbag_system.adb:37:10]
                         [#"airbag_system.adb" 37 0 0] ());
                        ([@GP_Sloc:airbag_system.adb:37:10]
                         [#"airbag_system.adb" 37 0 0]
                         (([#"airbag_system.adb" 37 0 0]
                           (val _f : unit in
                            _f));
                          (As_io_wrapper__as_put_line___axiom.as_put_line
                             (let temp___246 =
                                Temp___String_Literal_245.temp___String_Literal_245
                                  () in
                              ((Standard__string.of_array temp___246)
                                 (1 : int))
                                (0 : int)))));
                        ([@GNAT-comment:Check for the exit condition and loop statements appearing before the loop invariant of loop airbag_system.adb:32]
                         ());
                        (if False then
                           (raise Airbag_system__read_acceleration__L_3.L_3)
                         else ())));
                      ([@GNAT-comment:gnat_ast_to_ptree: code before the loop invariant]
                       [@GNAT-comment:Check for absence of RTE in the loop invariant and variant]
                       ());
                      ([@GNAT-comment:gnat_ast_to_ptree: code checking the variants]
                       ())
                    done))
                with Airbag_system__read_acceleration__L_3.L_3 -> ()
                end))
            else ())));
         ([@GP_Sloc:airbag_system.adb:39:7] [#"airbag_system.adb" 39 0 0] ());
         ([@GP_Sloc:airbag_system.adb:39:60] [#"airbag_system.adb" 39 0 0] ());
         ([@GP_Sloc:airbag_system.adb:39:46]
          [#"airbag_system.adb" 39 0 0]
          (let temp___249 =
             let temp___248 =
               { Airbag_system__status_system_type.__split_fields =
                   (Airbag_system__status_system_type.__split_fields__content
                       Airbag_system__status_system.status_system__split_fields) } in
             ([#"airbag_system.adb" 39 0 0]
              (begin
                 ensures { true }
                 let _ =
                   let _ =
                     (Airbag_system__status_system_type.__split_fields
                         temp___248).Airbag_system__status_system_type.rec__airbag_system__status_system_type__time_difference_measured in
                   () in
                 ()
               end));
             ({ temp___248 with
                Airbag_system__status_system_type.__split_fields =
                  ({ (Airbag_system__status_system_type.__split_fields
                         temp___248) with
                     Airbag_system__status_system_type.rec__airbag_system__status_system_type__time_difference_measured =
                       (Airbag_system__time_range__rep.of_rep
                          ([#"airbag_system.adb" 39 0 0]
                           [@GP_Shape:status_system_assign__typeconv]
                           [@comment:      Status_System.Time_Difference_Measured := Time_Range(T);                                                            ^ airbag_system.adb:39:60:VC_RANGE_CHECK]
                           [@vc:annotation]
                           [@GP_Reason:VC_RANGE_CHECK]
                           [@GP_Id:2]
                           [@GP_Sloc:airbag_system.adb:39:60]
                           (Airbag_system__time_range.range_check_
                              (Airbag_system__read_acceleration__t.t.int__content)))) }) }) in
           Airbag_system__status_system.status_system__split_fields.Airbag_system__status_system_type.__split_fields__content <-
             (Airbag_system__status_system_type.__split_fields temp___249)));
         ([@GP_Sloc:airbag_system.adb:40:7] [#"airbag_system.adb" 40 0 0] ());
         ([@GP_Sloc:airbag_system.adb:40:75] [#"airbag_system.adb" 40 0 0] ());
         ([@GP_Sloc:airbag_system.adb:40:78] [#"airbag_system.adb" 40 0 0] ());
         ([@GP_Sloc:airbag_system.adb:40:81] [#"airbag_system.adb" 40 0 0] ());
         ([@GP_Sloc:airbag_system.adb:40:65] [#"airbag_system.adb" 40 0 0] ());
         ([@GP_Sloc:airbag_system.adb:40:43]
          [#"airbag_system.adb" 40 0 0]
          (let temp___252 =
             let temp___251 =
               { Airbag_system__status_system_type.__split_fields =
                   (Airbag_system__status_system_type.__split_fields__content
                       Airbag_system__status_system.status_system__split_fields) } in
             ([#"airbag_system.adb" 40 0 0]
              (begin
                 ensures { true }
                 let _ =
                   let _ =
                     (Airbag_system__status_system_type.__split_fields
                         temp___251).Airbag_system__status_system_type.rec__airbag_system__status_system_type__acceleration_measured in
                   () in
                 ()
               end));
             ({ temp___251 with
                Airbag_system__status_system_type.__split_fields =
                  ({ (Airbag_system__status_system_type.__split_fields
                         temp___251) with
                     Airbag_system__status_system_type.rec__airbag_system__status_system_type__acceleration_measured =
                       (Airbag_system__acceleration_range__rep.of_rep
                          ([#"airbag_system.adb" 40 0 0]
                           [@GP_Shape:status_system_assign__typeconv__call_getgforce]
                           [@comment:      Status_System.Acceleration_Measured := Acceleration_Range(getGForce(V0,V1,T));                                                                 ^ airbag_system.adb:40:65:VC_RANGE_CHECK]
                           [@vc:annotation]
                           [@GP_Reason:VC_RANGE_CHECK]
                           [@GP_Sloc:airbag_system.adb:40:65]
                           [@GP_Id:3]
                           (Airbag_system__acceleration_range.range_check_
                              (((Airbag_system__getgforce___axiom.getgforce
                                   (Airbag_system__read_acceleration__v0.v0.int__content))
                                  (Airbag_system__read_acceleration__v1.v1.int__content))
                                 (Airbag_system__read_acceleration__t.t.int__content))))) }) }) in
           Airbag_system__status_system.status_system__split_fields.Airbag_system__status_system_type.__split_fields__content <-
             (Airbag_system__status_system_type.__split_fields temp___252)));
         (raise Return__exc)
       with Return__exc -> ()
       end)))
end
